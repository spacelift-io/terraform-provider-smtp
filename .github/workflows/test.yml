# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  push:
    paths-ignore:
      - 'README.md'

jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # run acceptance tests in a matrix with Terraform core versions
  test:
    name: Matrix Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '0.15.*'
          - '1.0.*'
          - '1.1.*'
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: 'go.mod'
        cache: true
      id: go

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ matrix.terraform }}
        terraform_wrapper: false

    - name: Get dependencies
      run: |
        go mod download
        
    - name: TF acceptance tests
      timeout-minutes: 10
      env:
        TF_ACC: "1"
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PLAIN_PASSWORD: ${{ secrets.SMTP_PLAIN_PASSWORD }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}

      run: |
        go test -v -cover ./internal/provider/
